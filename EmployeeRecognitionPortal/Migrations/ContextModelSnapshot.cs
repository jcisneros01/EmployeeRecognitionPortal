// <auto-generated />
using System;
using EmployeeRecognitionPortal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeRecognitionPortal.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("EmployeeRecognitionPortal.Models.AwardCreator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<byte[]>("Signature");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AwardCreator");
                });

            modelBuilder.Entity("EmployeeRecognitionPortal.Models.EmpOfMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AwardCreatorId");

                    b.Property<DateTime>("DateAwarded");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired();

                    b.Property<string>("EmployeeName")
                        .IsRequired();

                    b.Property<string>("LaTexFile");

                    b.HasKey("Id");

                    b.HasIndex("AwardCreatorId");

                    b.ToTable("EmpOfMonths");
                });

            modelBuilder.Entity("EmployeeRecognitionPortal.Models.EmpOfYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AwardCreatorId");

                    b.Property<DateTime>("DateAwarded");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired();

                    b.Property<string>("EmployeeName")
                        .IsRequired();

                    b.Property<string>("LaTexFile");

                    b.HasKey("Id");

                    b.HasIndex("AwardCreatorId");

                    b.ToTable("EmpOfYears");
                });

            modelBuilder.Entity("EmployeeRecognitionPortal.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmployeeRecognitionPortal.Models.AwardCreator", b =>
                {
                    b.HasOne("EmployeeRecognitionPortal.Models.User", "User")
                        .WithOne("AwardCreator")
                        .HasForeignKey("EmployeeRecognitionPortal.Models.AwardCreator", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EmployeeRecognitionPortal.Models.EmpOfMonth", b =>
                {
                    b.HasOne("EmployeeRecognitionPortal.Models.AwardCreator", "AwardCreator")
                        .WithMany()
                        .HasForeignKey("AwardCreatorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EmployeeRecognitionPortal.Models.EmpOfYear", b =>
                {
                    b.HasOne("EmployeeRecognitionPortal.Models.AwardCreator", "AwardCreator")
                        .WithMany()
                        .HasForeignKey("AwardCreatorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
